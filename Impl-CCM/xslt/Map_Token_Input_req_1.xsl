<?xml version="1.0" encoding="UTF-8"?>
<!-- @generated mapFile="xslt/Map_Token_Input_req_1.map" md5sum="11002a5dff4d87d933f3fb23eb511524" version="8.0.501" -->
<!--
*****************************************************************************
*   This file has been generated by the IBM Graphical Data Mapping Editor.
*   Version 8.0.5.0
*
*   Mapping file:		Map_Token_Input_req_1.map
*   Map declaration(s):	Map_Token_Input_req_1
*   Input file(s):		smo://smo/name%3Dwsdl-primary/sharedContext%3D%257Bhttp%253A%252F%252FImpl-CCMLibrary%257DCCMSharedBO/message%3D%257Bhttp%253A%252F%252FImpl-CCMLibrary%252FTokenGenerationService%257DGenerateTokenRequestMsg/xpath%3D%252F/smo.xsd
*   Output file(s):		smo://smo/name%3Dwsdl-primary/sharedContext%3D%257Bhttp%253A%252F%252FImpl-CCMLibrary%257DCCMSharedBO/message%3D%257Bhttp%253A%252F%252FImpl-CCMLibrary%252FTokenGeneration%257DGenerateTokenRequestMsg/xpath%3D%252F/smo.xsd
*
*   Note: Do not modify the contents of this file as it is overwritten
*         each time the mapping model is updated.
*****************************************************************************
-->
<xsl:stylesheet
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:xltxe="http://www.ibm.com/xmlns/prod/xltxe-j"
    xmlns:date="http://exslt.org/dates-and-times"
    xmlns:str="http://exslt.org/strings"
    xmlns:exsl="http://exslt.org/common"
    xmlns:set="http://exslt.org/sets"
    xmlns:fn="http://www.w3.org/2005/xpath-functions"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns:math="http://exslt.org/math"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:xs4xs="http://www.w3.org/2001/XMLSchema"
    xmlns:io7="http://www.ibm.com/xmlns/prod/websphere/http/sca/6.1.0"
    xmlns:io6="http://www.ibm.com/xmlns/prod/websphere/mq/sca/6.0.0"
    xmlns:in="wsdl.http://Impl-CCMLibrary/TokenGenerationService"
    xmlns:io="http://www.w3.org/2005/08/addressing"
    xmlns:io3="http://Impl-CCMLibrary"
    xmlns:in2="http://NBDATA"
    xmlns:io2="http://www.w3.org/2003/05/soap-envelope"
    xmlns:io5="http://www.ibm.com/websphere/sibx/smo/v6.0.1"
    xmlns:io4="http://schemas.xmlsoap.org/ws/2004/08/addressing"
    xmlns:in3="http://Impl-CCMLibrary/TokenGenerationService"
    xmlns:out2="http://Impl-CCMLibrary/TokenGeneration"
    xmlns:out="wsdl.http://Impl-CCMLibrary/TokenGeneration"
    xmlns:map="http://Impl-CCM/xslt/Map_Token_Input_req_1"
    xmlns:msl="http://www.ibm.com/xmlmap"
    exclude-result-prefixes="date str exsl set fn math map xltxe msl"
    version="2.0">
  <xsl:output method="xml" encoding="UTF-8" indent="no"/>

  <!-- root wrapper template  -->
  <xsl:template match="/">
    <xsl:choose>
      <xsl:when test="msl:datamap">
        <msl:datamap>
          <xsl:element name="dataObject">
            <xsl:attribute name="xsi:type">
              <xsl:value-of select="'io5:ServiceMessageObject'"/>
            </xsl:attribute>
            <xsl:call-template name="map:Map_Token_Input_req_12">
              <xsl:with-param name="smo" select="msl:datamap/dataObject[1]"/>
            </xsl:call-template>
          </xsl:element>
        </msl:datamap>
      </xsl:when>
      <xsl:otherwise>
        <xsl:apply-templates select="io5:smo" mode="map:Map_Token_Input_req_1">
        </xsl:apply-templates>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>

  <!-- This rule represents an element mapping: "io5:smo" to "io5:smo".  -->
  <xsl:template match="io5:smo"  mode="map:Map_Token_Input_req_1">
    <io5:smo>
      <context>
        <!-- a structural mapping: "context/shared"(CCMSharedBO) to "shared"(CCMSharedBO) -->
        <xsl:if test="context/shared">
          <xsl:copy-of select="context/shared" copy-namespaces="yes"/>
        </xsl:if>
      </context>
      <headers>
        <SMOHeader>
          <Target>
            <!-- a simple data mapping: "body/in3:GenerateToken/TokenGenerationAisInput/in2:end_point_url"(string) to "address"(anyURI) -->
            <xsl:element name="address">
              <xsl:value-of select="body/in3:GenerateToken/TokenGenerationAisInput/in2:end_point_url"/>
            </xsl:element>
          </Target>
        </SMOHeader>
        <HTTPHeader>
          <control>
            <!-- a simple mapping with no associated source:  to "io7:MediaType"(string) -->
            <xsl:element name="io7:MediaType">
              <xsl:text>application/x-www-form-urlencoded</xsl:text>
            </xsl:element>
          </control>
          <!-- a structural mapping: "body/in3:GenerateToken/TokenGenerationAisInput/in2:cookie"(string) to "header"(HTTPHeader) -->
          <xsl:apply-templates select="body/in3:GenerateToken/TokenGenerationAisInput/in2:cookie" mode="localCookieToHeader_1400170618">
          </xsl:apply-templates>
        </HTTPHeader>
      </headers>
    </io5:smo>
  </xsl:template>

  <!-- This rule represents a type mapping: "io5:smo" to "io5:smo".  -->
  <xsl:template name="map:Map_Token_Input_req_12">
    <xsl:param name="smo"/>
    <context>
      <!-- a structural mapping: "$smo/context/shared"(CCMSharedBO) to "shared"(CCMSharedBO) -->
      <xsl:if test="$smo/context/shared">
        <xsl:copy-of select="$smo/context/shared" copy-namespaces="yes"/>
      </xsl:if>
    </context>
    <headers>
      <SMOHeader>
        <Target>
          <!-- a simple data mapping: "$smo/body/in3:GenerateToken/TokenGenerationAisInput/in2:end_point_url"(string) to "address"(anyURI) -->
          <xsl:element name="address">
            <xsl:value-of select="$smo/body/in3:GenerateToken/TokenGenerationAisInput/in2:end_point_url"/>
          </xsl:element>
        </Target>
      </SMOHeader>
      <HTTPHeader>
        <control>
          <!-- a simple mapping with no associated source:  to "io7:MediaType"(string) -->
          <xsl:element name="io7:MediaType">
            <xsl:text>application/x-www-form-urlencoded</xsl:text>
          </xsl:element>
        </control>
        <!-- a structural mapping: "$smo/body/in3:GenerateToken/TokenGenerationAisInput/in2:cookie"(string) to "header"(HTTPHeader) -->
        <xsl:apply-templates select="$smo/body/in3:GenerateToken/TokenGenerationAisInput/in2:cookie" mode="localCookieToHeader_1400170618">
        </xsl:apply-templates>
      </HTTPHeader>
    </headers>
  </xsl:template>

  <!-- This rule represents an element mapping: "in2:cookie" to "header".  -->
  <xsl:template match="in2:cookie"  mode="localCookieToHeader_1400170618">
    <header>
      <!-- a simple mapping with no associated source:  to "io7:name"(string) -->
      <io7:name>
        <xsl:text>Cookie</xsl:text>
      </io7:name>
      <!-- a simple data mapping: "."(string) to "io7:value"(string) -->
      <io7:value>
        <xsl:value-of select="."/>
      </io7:value>
    </header>
  </xsl:template>

  <!-- *****************    Utility Templates    ******************  -->
  <!-- copy the namespace declarations from the source to the target -->
  <xsl:template name="copyNamespaceDeclarations">
    <xsl:param name="root"/>
    <xsl:for-each select="$root/namespace::node()[not(name() = '')]">
      <xsl:copy/>
    </xsl:for-each>
  </xsl:template>
</xsl:stylesheet>
